// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


  model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  category    String
  brand       String
  images      String[] // Usa array de texto en PostgreSQL
  stock       Int
  discount    Float     @default(0)
  code        String   @unique
  salesCount  Int       @default(0)
  status      ProductStatus
  orderItems  OrderItem[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Enum para el estado del producto
enum ProductStatus {
  active
  inactive
  archived
}


model Order {
  id             String       @id @default(uuid())
  userId         String
  totalAmount    Float
  status         OrderStatus
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  items          OrderItem[]
  //transaction    Transaction? @relation(fields: [transactionId], references: [id])
  transactionId  String?

  @@map("orders")
}

//Enum para el estado de la orden
enum OrderStatus {
  active
  inactive
  archived
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  unitPrice Float

  product   Product  @relation(fields: [productId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id])
}
